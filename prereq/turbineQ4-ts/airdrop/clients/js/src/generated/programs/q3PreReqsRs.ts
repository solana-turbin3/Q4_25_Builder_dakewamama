/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  containsBytes,
  fixEncoderSize,
  getBytesEncoder,
  type Address,
  type ReadonlyUint8Array,
} from '@solana/kit';
import {
  type ParsedInitializeInstruction,
  type ParsedSubmitTsInstruction,
} from '../instructions';

export const Q3_PRE_REQS_RS_PROGRAM_ADDRESS =
  'TRBZyQHB3m68FGeVsqTK39Wm4xejadjVhP5MAZaKWDM' as Address<'TRBZyQHB3m68FGeVsqTK39Wm4xejadjVhP5MAZaKWDM'>;

export enum Q3PreReqsRsAccount {
  PreReq,
}

export function identifyQ3PreReqsRsAccount(
  account: { data: ReadonlyUint8Array } | ReadonlyUint8Array
): Q3PreReqsRsAccount {
  const data = 'data' in account ? account.data : account;
  if (
    containsBytes(
      data,
      fixEncoderSize(getBytesEncoder(), 8).encode(
        new Uint8Array([137, 234, 243, 161, 230, 149, 21, 14])
      ),
      0
    )
  ) {
    return Q3PreReqsRsAccount.PreReq;
  }
  throw new Error(
    'The provided account could not be identified as a q3PreReqsRs account.'
  );
}

export enum Q3PreReqsRsInstruction {
  Initialize,
  SubmitTs,
}

export function identifyQ3PreReqsRsInstruction(
  instruction: { data: ReadonlyUint8Array } | ReadonlyUint8Array
): Q3PreReqsRsInstruction {
  const data = 'data' in instruction ? instruction.data : instruction;
  if (
    containsBytes(
      data,
      fixEncoderSize(getBytesEncoder(), 8).encode(
        new Uint8Array([175, 175, 109, 31, 13, 152, 155, 237])
      ),
      0
    )
  ) {
    return Q3PreReqsRsInstruction.Initialize;
  }
  if (
    containsBytes(
      data,
      fixEncoderSize(getBytesEncoder(), 8).encode(
        new Uint8Array([137, 241, 199, 223, 125, 33, 85, 217])
      ),
      0
    )
  ) {
    return Q3PreReqsRsInstruction.SubmitTs;
  }
  throw new Error(
    'The provided instruction could not be identified as a q3PreReqsRs instruction.'
  );
}

export type ParsedQ3PreReqsRsInstruction<
  TProgram extends string = 'TRBZyQHB3m68FGeVsqTK39Wm4xejadjVhP5MAZaKWDM',
> =
  | ({
      instructionType: Q3PreReqsRsInstruction.Initialize;
    } & ParsedInitializeInstruction<TProgram>)
  | ({
      instructionType: Q3PreReqsRsInstruction.SubmitTs;
    } & ParsedSubmitTsInstruction<TProgram>);
